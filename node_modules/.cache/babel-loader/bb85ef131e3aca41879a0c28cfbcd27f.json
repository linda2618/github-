{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u524D\\u7AEF\\u57FA\\u7840\\\\React\\u811A\\u624B\\u67B6-\\u6848\\u4F8B\\\\search-github\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport Search from \"./components/Search\";\nimport List from \"./components/List\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      users: [],\n      isFirst: true,\n      isLoading: false,\n      err: false\n    };\n    this.saveState = () => {\n      this.setState();\n    };\n  }\n  //父组件定义的 方法，获取子组件传递过来的\n  // saveUsers = (users) => {\n  //   //将获取到的数据保存\n  //   this.setState({ users });\n  // };\n  // changeIsFirst = () => {\n\n  // },\n  // changeIsLoading = () => {\n\n  // },\n  // saveErr = () => {\n\n  // }\n\n  render() {\n    const {\n      users\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Search, {\n        getUsers: this.saveUsers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        usersArr: users\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","Search","List","App","state","users","isFirst","isLoading","err","saveState","setState","render","saveUsers"],"sources":["D:/前端基础/React脚手架-案例/search-github/src/App.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport Search from \"./components/Search\";\nimport List from \"./components/List\";\n\nexport default class App extends Component {\n  //初始化用户数组\n  state = { users: [], isFirst: true, isLoading: false, err: false };\n  saveState = () => {\n    this.setState();\n  };\n\n  //父组件定义的 方法，获取子组件传递过来的\n  // saveUsers = (users) => {\n  //   //将获取到的数据保存\n  //   this.setState({ users });\n  // };\n  // changeIsFirst = () => {\n\n  // },\n  // changeIsLoading = () => {\n\n  // },\n  // saveErr = () => {\n\n  // }\n\n  render() {\n    const { users } = this.state;\n    return (\n      <div className=\"container\">\n        <Search getUsers={this.saveUsers} />\n        <List usersArr={users} />\n      </div>\n    );\n  }\n}\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,IAAI,MAAM,mBAAmB;AAAC;AAErC,eAAe,MAAMC,GAAG,SAASH,SAAS,CAAC;EAAA;IAAA;IAAA,KAEzCI,KAAK,GAAG;MAAEC,KAAK,EAAE,EAAE;MAAEC,OAAO,EAAE,IAAI;MAAEC,SAAS,EAAE,KAAK;MAAEC,GAAG,EAAE;IAAM,CAAC;IAAA,KAClEC,SAAS,GAAG,MAAM;MAChB,IAAI,CAACC,QAAQ,EAAE;IACjB,CAAC;EAAA;EAED;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;;EAEA;;EAEAC,MAAM,GAAG;IACP,MAAM;MAAEN;IAAM,CAAC,GAAG,IAAI,CAACD,KAAK;IAC5B,oBACE;MAAK,SAAS,EAAC,WAAW;MAAA,wBACxB,QAAC,MAAM;QAAC,QAAQ,EAAE,IAAI,CAACQ;MAAU;QAAA;QAAA;QAAA;MAAA,QAAG,eACpC,QAAC,IAAI;QAAC,QAAQ,EAAEP;MAAM;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QACrB;EAEV;AACF"},"metadata":{},"sourceType":"module"}